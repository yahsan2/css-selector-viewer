[
    {
        "title": "すべての要素",
        "selector": "*",
        "point": "html に書かれたすべての要素をセレクタにする"
    },
    {
        "title": "子孫要素",
        "selector": "div p",
        "point": "階層の深い小要素（孫 ）もセレクタの対象となる"
    },
    {
        "title": "直下の子要素",
        "selector": "div > p",
        "point": "１つ下の階層の子要素だけが対象となり、孫要素は対象外。※直下とは真下の意味ではない"
    },
    {
        "title": "兄弟要素",
        "selector": "h3 ~ p",
        "point": "指定した要素より後にでてくる同じ階層の要素が対象。"
    },
    {
        "title": "隣の要素",
        "selector": "h3 + p",
        "point": "その要素の後ろ隣にある要素をセレクタにする。※完全に隣の要素じゃないと機能しない"
    },
    {
        "title": "最初の子要素",
        "selector": "p:first-of-type",
        "point": "その要素の中で最初にでてくる子要素。"
    },
    {
        "title": "最後の子要素",
        "selector": "p:last-of-type",
        "point": "その要素の中で最後にでてくる子要素。"
    },
    {
        "title": "〇〇番目の子要素",
        "selector": "p:nth-of-type(2)",
        "point": "(n)の箇所には1〜の好きな数字を半角で入力する。もちろん(1)とすれば最初の要素。"
    },
    {
        "title": "後ろから〇〇番目の子要素",
        "selector": "p:nth-last-of-type(2)",
        "point": "(n)の箇所には1〜の好きな数字を半角で入力する。もちろん(1)とすれば最後の要素。"
    },
    {
        "title": "奇数の子要素",
        "selector": "p:nth-of-type(odd)",
        "point": "(数字)を入れる箇所に、oddと記入で奇数番号の要素をセレクタにできる。"
    },
    {
        "title": "〇〇番目の子要素",
        "selector": "p:nth-of-type(even)",
        "point": "(数字)を入れる箇所に、evenと記入で偶数番号の要素をセレクタにできる。"
    },
    {
        "title": "倍数の子要素",
        "selector": ":nth-of-type(3n)",
        "point": "(数字)に◯nと書くことで特定の倍数の番号にある要素をセレクタにできる。"
    },
    {
        "title": "倍数の子要素",
        "selector": "p:nth-of-type(3n)",
        "point": "(数字)に◯nと書くことで特定の倍数の番号にある要素をセレクタにできる。"
    },
    {
        "title": "3列の真ん中",
        "selector": "p:nth-of-type(3n-1)",
        "point": "3列の真ん中の要素だけを指定したい場合は3n-1。つまり3の倍数の１つ前の要素"
    },
    {
        "title": "属性で指定",
        "selector": "p[class]",
        "point": "[class]や[href][src]など指定した属性を持つ要素をセレクタにする。"
    },
    {
        "title": "属性で指定",
        "selector": "p[class*=\"ttl\"]",
        "point": "属性の内容の一部が一致していれば選択される。例は[\"ttl\"]という文字が含まれていればセレクタ。"
    },
    {
        "title": "属性内容の“始め”が一致する要素",
        "selector": "p[class^=\"ttl\"]",
        "point": "属性の内容の始まりが一致していれば選択される。例は[\"ttl\"]という文字から始まっていればセレクタ。"
    },
    {
        "title": "属性内容の“最後”が一致する要素",
        "selector": "p[class$=\"one\"]",
        "point": "属性の内容の終わりが一致していれば選択される。例は[\"one\"]という文字で終わっていればセレクタ。"
    },
    {
        "title": "文章の一行目",
        "selector": "p:first-line",
        "point": "文章の一行目に対してCSSを適用する。改行された文章は対象外となる（※ブロック要素だけ）"
    },
    {
        "title": "一文字目",
        "selector": "p:first-letter",
        "point": "文章の一文字目に対してCSSを適用する。（※ブロック要素だけ）"
    },
    {
        "title": "〇〇以外の要素",
        "selector": "p:not(.text)",
        "point": "not(条件)を書くことでそれ以外の要素を選択する。例ではclass名が[.text]以外の[p]がセレクタになる。"
    },
    {
        "title": "要素が空の時",
        "selector": "p:empty",
        "point": "要素の中身が空っぽの要素に対してCSSを適用できる。"
    }
]